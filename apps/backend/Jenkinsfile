
def remote = [:]
remote.name = 'worker'
remote.host = '10.128.0.11'
remote.allowAnyHosts = true

node {
    withCredentials([sshUserPrivateKey(credentialsId: 'sshUser', keyFileVariable: 'identifyFile', passphraseVariable: '', usernameVariable: 'userName')]) {
        remote.user = userName
        remote.identityFile = identifyFile
        stage("Download Namespace file") {
            sshCommand remote: remote, command: 'mkdir ${JOB_NAME}-${BUILD_NUMBER}'
            sshCommand remote: remote, command: 'wget https://raw.githubusercontent.com/LisandroLuna/devopsChallenge/main/apps/backend/namespace.yaml -P ${JOB_NAME}-${BUILD_NUMBER}'
        }
        stage("Apply Namespace") {
            sshCommand remote: remote, command: 'kubectl apply -f ./${JOB_NAME}-${BUILD_NUMBER}/namespace.yaml'
        }
        stage("Download Deployment file") {
            sshCommand remote: remote, command: 'wget https://raw.githubusercontent.com/LisandroLuna/devopsChallenge/main/apps/backend/deployment.yaml -P ${JOB_NAME}-${BUILD_NUMBER}'
        }
        stage("Apply Deployment") {
            sshCommand remote: remote, command: 'kubectl apply -f ./${JOB_NAME}-${BUILD_NUMBER}/deployment.yaml -n app-backend'
        }
    }
}